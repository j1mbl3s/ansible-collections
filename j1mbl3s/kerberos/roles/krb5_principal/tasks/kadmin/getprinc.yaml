---
- name: Run `kadmin getprinc ...` with delegated failure
  become: true
  ansible.builtin.expect:
    command: >-
      {{ krb5_principal_kadmin_command_init }}
      getprinc
      {{ krb5_principal_name }}
    responses: "{{ krb5_principal_kadmin_responses_init }}"
  no_log: true
  register: krb5_principal_getprinc
  changed_when: false
  failed_when: false

- name: Set noexist fact for nonexistent principal
  ansible.builtin.set_fact:
    krb5_principal_noexist: >-
      {{
        krb5_principal_getprinc.rc > 0 and
          krb5_principal_getprinc.stdout_lines[-1].startswith(
            'get_principal: Principal does not exist'
          )
      }}

- name: Delegated failure for `kadmin getprinc ...`
  when: 
    - krb5_principal_getprinc.rc > 0
    - not krb5_principal_noexist
  ansible.builtin.fail:
    msg: "{{ krb5_principal_getprinc.stdout_lines[-1] }}"

- name: Parse `kadmin getprinc ...` output for existing principal
  when: krb5_principal_getprinc.rc == 0
  block:

    - name: Set attributes fact to list of attributes
      ansible.builtin.set_fact:
        krb5_principal_getprinc_attributes: >-
          {{
            (
              krb5_principal_getprinc.stdout_lines
              | select('ansible.builtin.regex', '^Attributes:')
              | first
              | default('')
              | ansible.builtin.split
            )[1:]
          }}
    
    - name: Set policy fact to policy value
      ansible.builtin.set_fact:
        krb5_principal_getprinc_policy: >-
          {{
            (
              krb5_principal_getprinc.stdout_lines
              | select('ansible.builtin.regex', '^Policy:')
              | first
              | default('Policy: [none]')
              | ansible.builtin.split
            )[1]
          }}

    - name: Set keys fact to list of kvno and kencrypt pairs
      ansible.builtin.set_fact:
        krb5_principal_getprinc_keys: >-
          {{
            krb5_principal_getprinc.stdout_lines
            | select('ansible.builtin.regex', '^Key:')
            | map('ansible.builtin.regex_search', '^Key:\s+vno\s+([0-9]+),\s+(\S+)\s*$', '\1', '\2')
          }}
...
